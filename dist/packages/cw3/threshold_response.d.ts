/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This defines the different ways tallies can happen. Every contract should support a subset of these, ideally all.
 *
 * The total_weight used for calculating success as well as the weights of each individual voter used in tallying should be snapshotted at the beginning of the block at which the proposal starts (this is likely the responsibility of a correct cw4 implementation).
 */
export type ThresholdResponse =
  | {
      absolute_count: {
        total_weight: number;
        weight: number;
        [k: string]: unknown;
      };
    }
  | {
      absolute_percentage: {
        percentage: Decimal;
        total_weight: number;
        [k: string]: unknown;
      };
    }
  | {
      threshold_quorum: {
        quorum: Decimal;
        threshold: Decimal;
        total_weight: number;
        [k: string]: unknown;
      };
    };
/**
 * A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0
 *
 * The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)
 */
export type Decimal = string;
